{"version":3,"sources":["images/header_logo_theme_dark.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/ImagePopup.js","utils/api.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ProtectedRoute.js","components/Login.js","components/Register.js","utils/auth.js","images/sucess.svg","images/alert.svg","components/InfoTooltip.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","props","React","useState","isOpen","setIsOpen","headerUser","className","email","onClick","handleLogOut","to","src","logo","alt","exact","path","e","target","classList","toggle","CurrentUserContext","createContext","Card","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","type","onCardDelete","link","name","onCardClick","onCardLike","length","Main","style","backgroundImage","avatar","onEditAvatar","about","onEditProfile","onAddPlace","cards","map","item","id","Footer","PopupWithForm","title","noValidate","onSubmit","children","onClose","EditProfilePopup","setName","description","setDescription","useEffect","preventDefault","onUpdateUser","minLength","maxLength","required","value","onChange","ImagePopup","api","url","token","cohortId","this","_url","_token","_cohortId","res","ok","json","Promise","reject","status","fetch","method","headers","authorization","then","_getResponseStatus","body","JSON","stringify","cardId","addLike","removeLike","EditAvatarPopup","avatarRef","useRef","onUpdateAvatar","current","ref","AddPlacePopup","setUrl","placeholder","ProtectedRoute","Component","component","loggedIn","Login","setEmail","password","setPassword","handleSignIn","Register","handleSignUp","auth","jwt","InfoTooltip","isSucceed","success","alert","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","setCurrentUser","userEmail","setUserEmail","infoTooltip","setInfoTooltip","setCards","setLoggedIn","history","useHistory","closeAllPopups","getUserInformation","data","catch","console","error","getInitialCards","localStorage","getItem","getToken","checkToken","push","Provider","removeItem","changeLikeCardStatus","newCard","state","c","deleteCard","filter","signUp","signIn","setItem","changeUserAvatar","finally","saveUserInformation","addNewCard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.797c6783.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/header_logo_theme_dark.9acae848.svg\";","import React from \"react\";\r\nimport logo from \"../images/header_logo_theme_dark.svg\";\r\nimport { Route, Switch, Link } from \"react-router-dom\";\r\n\r\nfunction Header(props) {\r\n\r\n    const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n    function handleLogOut() {\r\n        props.handleLogOut();\r\n        setIsOpen(false);\r\n    }\r\n\r\n    function handlerClick(e) {\r\n            e.target.classList.toggle('button__close');\r\n            e.target.classList.toggle('button__burger-menu');\r\n            setIsOpen(!isOpen);\r\n    }\r\n\r\n    const headerUser = (\r\n        <div className={isOpen ? 'header__wrapper' : 'header__wrapper header__wrapper_hidden'}>\r\n            <span className=\"header__title\">{props.email}</span>\r\n            <Link className=\"link header__wrapper-link\"\r\n                  onClick={handleLogOut}\r\n                  to=\"/sign-in\"\r\n            >Выйти</Link>\r\n        </div>\r\n    )\r\n\r\n    return(\r\n            <div className=\"header\">\r\n                <img className=\"header__logo\" src={logo} alt=\"МЕСТО\" />\r\n\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        {headerUser}\r\n                        <div className=\"header__nav\">\r\n                            <button className=\"button button__burger-menu\"\r\n                                    onClick={handlerClick}/>\r\n                        </div>\r\n                    </Route>\r\n\r\n                    <Route exact path=\"/sign-in\">\r\n                            <Link to='/sign-up'\r\n                                  className=\"link header__link\"\r\n                            >Регистрация</Link>\r\n                    </Route>\r\n\r\n                    <Route exact path=\"/sign-up\">\r\n                            <Link to='/sign-in'\r\n                                  className=\"link header__link\"\r\n                            >Войти</Link>\r\n                    </Route>\r\n\r\n\r\n                </Switch>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import {useContext} from 'react';\r\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\r\n\r\nfunction Card(props) {\r\n    const currentUser = useContext(CurrentUserContext);\r\n\r\n    const isOwn = props.card.owner._id === currentUser._id;\r\n\r\n    const cardDeleteButtonClassName = (\r\n        `card__delete ${isOwn ? `card__delete_visible` : `card__delete_hidden`}`\r\n    );\r\n\r\n    // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n    const isLiked = props.card.likes.some(i => i._id === currentUser._id);\r\n\r\n    // Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n    const cardLikeButtonClassName = `card__like_active`;\r\n\r\n    //Коллбэк функция по клику на изображение карточки\r\n    function handleClick() {\r\n        props.onCardClick(props.card);\r\n    }\r\n\r\n    function handleLikeClick() {\r\n        props.onCardLike(props.card);\r\n    }\r\n\r\n    function handleDeleteClick() {\r\n        props.onCardDelete(props.card);\r\n    }\r\n\r\n    return(\r\n        <div className=\"card-template\">\r\n            <li className=\"card\">\r\n                <button\r\n                    className={`button ${cardDeleteButtonClassName}`}\r\n                    type=\"button\"\r\n                    onClick={handleDeleteClick}\r\n                />\r\n                <img className=\"card__image\" src={props.link} alt={props.name} onClick={handleClick}/>\r\n                <div className=\"card__text\">\r\n                    <h2 className=\"card__title\">{props.name}</h2>\r\n                    <div className=\"card__like-wrapper\">\r\n                        <button\r\n                            className={`button card__like ${isLiked ? cardLikeButtonClassName : ''}`}\r\n                            type=\"button\"\r\n                            onClick={handleLikeClick}\r\n                        />\r\n                        <span className=\"card__like-counter\">{props.likes.length}</span>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import {useContext} from 'react';\r\nimport Card from \"./Card\";\r\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\r\n\r\nfunction Main(props) {\r\n    const currentUser = useContext(CurrentUserContext);\r\n\r\n    return (\r\n\r\n        <main className=\"content\">\r\n\r\n            <section className=\"profile\">\r\n                <div className=\"profile__avatar-wrapper\" style={{backgroundImage: `url(${currentUser.avatar})`}} >\r\n                    <button className=\"button profile__edit-image\" onClick={props.onEditAvatar}/>\r\n                </div>\r\n                <div className=\"profile__wrapper\">\r\n                    <div className=\"profile__info\">\r\n                        <h1 className=\"profile__info-title\">{currentUser.name}</h1>\r\n                        <p className=\"profile__info-text\">{currentUser.about}</p>\r\n                    </div>\r\n                    <button className=\"button profile__edit\" type=\"button\" onClick={props.onEditProfile}/>\r\n                </div>\r\n                <button className=\"button profile__add\" type=\"button\" onClick={props.onAddPlace}/>\r\n            </section>\r\n\r\n            <section>\r\n                <ul className=\"cards\">\r\n                    {\r\n                        props.cards.map((item) => (\r\n                            <Card\r\n                                key={item._id}\r\n                                name={item.name}\r\n                                link={item.link}\r\n                                likes={item.likes}\r\n                                id={item._id}\r\n                                onCardClick={props.onCardClick}\r\n                                card={item}\r\n                                onCardLike={props.onCardLike}\r\n                                onCardDelete={props.onCardDelete}\r\n                            />\r\n                        )\r\n                        )}\r\n                </ul>\r\n            </section>\r\n        </main>\r\n\r\n    )\r\n}\r\n\r\nexport default Main;","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nfunction Footer() {\r\n    return(\r\n        <Switch>\r\n            <Route exact path=\"/\">\r\n                <footer className=\"footer\">\r\n                    <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\r\n                </footer>\r\n            </Route>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Footer;","function PopupWithForm(props) {\r\n\r\n    function handleClosePopupClick() {\r\n        props.onClose();\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className={props.isOpen? `popup popup_type_${props.name} popup_display_active` : `popup popup_type_${props.name}`}>\r\n                <div className=\"popup__window\">\r\n                    <h2 className=\"popup__title\">{props.title}</h2>\r\n                    <form className=\"popup__form\" name={props.name} noValidate onSubmit={props.onSubmit}>\r\n                        {props.children}\r\n                    </form>\r\n                    <button className=\"button button__close popup__close\" type=\"button\" onClick={handleClosePopupClick}/>\r\n                </div>\r\n            </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default PopupWithForm;","import {useState, useEffect, useContext} from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\r\n\r\nfunction EditProfilePopup(props) {\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const currentUser = useContext(CurrentUserContext);\r\n\r\n    function handleOnNameChange(e) {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    function handleOnDescriptionChange(e) {\r\n        setDescription(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault(); //?\r\n\r\n        props.onUpdateUser({\r\n            name,\r\n            about: description,\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setName(currentUser.name);\r\n        setDescription(currentUser.about);\r\n    }, [currentUser]);\r\n\r\n    return (\r\n        <PopupWithForm title={'Редактировать профиль'}\r\n                       name={'edit-profile'}\r\n                       onClose={props.onClose}\r\n                       isOpen={props.isOpen}\r\n                       onSubmit={handleSubmit}\r\n        >\r\n            <input className=\"popup__input popup__input_profile_name\" type=\"text\" name=\"name\" minLength=\"2\" maxLength=\"40\" required\r\n                   value={name}\r\n                   onChange={handleOnNameChange}\r\n            />\r\n            <span className=\"popup__input-error profile-name-error\"/>\r\n            <input className=\"popup__input popup__input_profile_job\" type=\"text\" name=\"about\" minLength=\"2\" maxLength=\"200\" required\r\n                   value={description}\r\n                   onChange={handleOnDescriptionChange}\r\n            />\r\n            <span className=\"popup__input-error profile-text-error\"/>\r\n            <button className=\"button popup__submit\" type=\"submit\">Сохранить</button>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default EditProfilePopup","function ImagePopup(props) {\r\n\r\n    return(\r\n\r\n        <div className={props.isOpen ? `popup popup_type_${props.name} popup_display_active` : `popup popup_type_${props.name}`}>\r\n            <div className=\"popup__image-viewer\">\r\n                <img className=\"popup__image\" src={props.link} alt={props.name}/>\r\n                <p className=\"popup__caption\">{props.name}</p>\r\n                <button className=\"button button__close popup__close\" type=\"button\" onClick={props.onClose}/>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ImagePopup;","class Api {\r\n    constructor({url, token, cohortId}) {\r\n        this._url = url;\r\n        this._token = token;\r\n        this._cohortId = cohortId;\r\n    }\r\n\r\n    _getResponseStatus (res) {\r\n        if (res.ok) {\r\n            return res.json();\r\n        } else {\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        }\r\n    }\r\n\r\n    getInitialCards () {\r\n        return fetch(`${this._url}${this._cohortId}/cards`, {\r\n            method: 'GET',\r\n            headers: {\r\n                authorization: this._token,\r\n            }\r\n        })\r\n            .then((res) => {\r\n                return this._getResponseStatus(res);\r\n            });\r\n    }\r\n\r\n    addNewCard ({ name, link }) {\r\n        return fetch(`${this._url}${this._cohortId}/cards`, {\r\n            method: 'POST',\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: name,\r\n                link: link,\r\n            })\r\n        })\r\n            .then((res) => {\r\n                return this._getResponseStatus(res);\r\n            });\r\n    }\r\n\r\n    deleteCard (cardId) {\r\n        return fetch(`${this._url}${this._cohortId}/cards/${cardId}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n        })\r\n            .then((res) => {\r\n                return this._getResponseStatus(res);\r\n            });\r\n    }\r\n\r\n    addLike (cardId) {\r\n        return fetch(`${this._url}${this._cohortId}/cards/likes/${cardId}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then((res) => {\r\n                return this._getResponseStatus(res);\r\n            });\r\n    }\r\n\r\n    removeLike (cardId) {\r\n        return fetch(`${this._url}${this._cohortId}/cards/likes/${cardId}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then((res) => {\r\n                return this._getResponseStatus(res);\r\n            });\r\n    }\r\n\r\n    changeLikeCardStatus(cardId, isLiked) {\r\n        return isLiked ? this.addLike(cardId) : this.removeLike(cardId);\r\n    }\r\n\r\n    getUserInformation () {\r\n        return fetch(`${this._url}${this._cohortId}/users/me`, {\r\n            headers: {\r\n                method: 'GET',\r\n                authorization: this._token,\r\n            }\r\n        })\r\n            .then((res) => this._getResponseStatus(res));\r\n    }\r\n\r\n    saveUserInformation ({ name, about }) {\r\n        return fetch(`${this._url}${this._cohortId}/users/me`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                name: name,\r\n                about: about,\r\n            })\r\n        })\r\n            .then((res) => {\r\n                return this._getResponseStatus(res);\r\n            });\r\n    }\r\n\r\n    changeUserAvatar (link) {\r\n        return fetch(`${this._url}${this._cohortId}/users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                avatar: link,\r\n            })\r\n        })\r\n            .then((res) => {\r\n                return this._getResponseStatus(res);\r\n            });\r\n    }\r\n}\r\n\r\nconst api = new Api({\r\n    url: 'https://mesto.nomoreparties.co/v1/',\r\n    token: '7f507e56-179e-4a59-8e89-b0f615ca62d2',\r\n    cohortId: 'cohort-20'\r\n})\r\n\r\nexport default api","import {useRef} from 'react';\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction EditAvatarPopup(props) {\r\n    const avatarRef = useRef();\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        props.onUpdateAvatar({\r\n            avatar: avatarRef.current.value,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm title={'Обновить аватар'}\r\n                       name={'edit-avatar'}\r\n                       isOpen={props.isOpen}\r\n                       onClose={props.onClose}\r\n                       onSubmit={handleSubmit}\r\n        >\r\n            <input className=\"popup__input popup__input_profile_avatar\" type=\"url\" name=\"avatar\" id=\"profile-avatar\" minLength=\"2\" required ref={avatarRef}/>\r\n            <span className=\"popup__input-error profile-avatar-error\"/>\r\n            <button className=\"button popup__submit\" type=\"submit\">Сохранить</button>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default EditAvatarPopup;","import {useState} from \"react\"\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction AddPlacePopup(props) {\r\n    const [name, setName] = useState('');\r\n    const [url, setUrl] = useState('');\r\n\r\n    function handleOnNameChange(e) {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    function handleOnUrlChange(e) {\r\n        setUrl(e.target.value)\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        props.onAddPlace({\r\n            name: name,\r\n            link: url,\r\n        });\r\n\r\n        setName('');\r\n        setUrl('');\r\n    }\r\n\r\n    return(\r\n        <PopupWithForm title={'Новое место'}\r\n                       name={'add-place'}\r\n                       isOpen={props.isOpen}\r\n                       onClose={props.onClose}\r\n                       onSubmit={handleSubmit}\r\n        >\r\n            <input className=\"popup__input popup__input_card_place\" type=\"text\" name=\"name\" id=\"card-title\"\r\n                   placeholder=\"Название\" minLength=\"2\" maxLength=\"30\" required\r\n                   onChange={handleOnNameChange}\r\n                   value={name}\r\n            />\r\n            <span className=\"popup__input-error card-title-error\"/>\r\n            <input className=\"popup__input popup__input_card_image\" type=\"url\" name=\"link\" id=\"card-image\"\r\n                   placeholder=\"Ссылка на картинку\" required\r\n                   onChange={handleOnUrlChange}\r\n                   value={url}\r\n            />\r\n            <span className=\"popup__input-error card-image-error\"/>\r\n            <button className=\"button popup__submit\" type=\"submit\">Создать</button>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default AddPlacePopup;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ component: Component, ...props}) => {\r\n    return (\r\n        <Route>\r\n            {() => props.loggedIn === true ? <Component {...props} /> : <Redirect to=\"./sign-up\" />}\r\n        </Route>\r\n    );\r\n};\r\n\r\nexport default ProtectedRoute;","import React, {useState} from 'react';\r\n\r\nfunction Login (props) {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    function handleChangeEmail(e) {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    function handleChangePassword(e) {\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        props.handleSignIn(email, password);\r\n    }\r\n\r\n    return(\r\n        <section className=\"auth\">\r\n            <h3 className=\"auth__title\">Вход</h3>\r\n            <form className=\"auth__form\"\r\n                  onSubmit={handleSubmit}>\r\n                <div className=\"auth__wrapper\">\r\n                    <input\r\n                        className=\"auth__input\"\r\n                        name=\"email\" type=\"email\"\r\n                        placeholder=\"Email\"\r\n                        onChange={handleChangeEmail}\r\n                        required/>\r\n                    <input\r\n                        className=\"auth__input\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        placeholder=\"Пароль\"\r\n                        onChange={handleChangePassword}\r\n                        required/>\r\n                </div>\r\n                <div>\r\n                    <input className=\"button button__white_theme\" type=\"submit\" value=\"Войти\"/>\r\n                    <span className=\"auth__caption\" />\r\n                </div>\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Login;","import {useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Register (props) {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    function handleChangeEmail(e) {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    function handleChangePassword(e) {\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        props.handleSignUp(email, password);\r\n    }\r\n\r\n    return(\r\n        <section className=\"auth\">\r\n            <h3 className=\"auth__title\">Регистрация</h3>\r\n            <form className=\"auth__form\"\r\n                  onSubmit={handleSubmit}>\r\n                <div className=\"auth__wrapper\">\r\n                    <input className=\"auth__input\"\r\n                           name=\"email\" type=\"email\"\r\n                           placeholder=\"Email\"\r\n                           onChange={handleChangeEmail}\r\n                           required/>\r\n                    <input className=\"auth__input\"\r\n                           name=\"password\"\r\n                           type=\"password\"\r\n                           placeholder=\"Пароль\"\r\n                           onChange={handleChangePassword}\r\n                           required/>\r\n                </div>\r\n                <div>\r\n                    <input className=\"button button__white_theme\" type=\"submit\" value=\"Зарегистрироваться\"/>\r\n                    <span className=\"auth__caption\">\r\n                        Уже зарегистрированы?&nbsp;<Link className=\"link\" to={'/sign-in'}>Войти</Link>\r\n                    </span>\r\n                </div>\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Register;","class Auth {\r\n    constructor(url) {\r\n        this.url = url;\r\n    }\r\n\r\n    _getResponseStatus (res) {\r\n        if (res.ok) {\r\n            return res.json();\r\n        } else {\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        }\r\n    }\r\n\r\n    signUp (email, password) {\r\n        return fetch (`${this.url}/signup`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({email, password})\r\n        }).then((res) => this._getResponseStatus(res));\r\n    }\r\n\r\n    signIn (email, password) {\r\n        return fetch (`${this.url}/signin`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({email, password})\r\n        }).then((res) => this._getResponseStatus(res));\r\n    }\r\n\r\n    getToken (jwt) {\r\n        return fetch (`${this.url}/users/me`, {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\" : `Bearer ${jwt}`\r\n            }\r\n        }).then((res) => this._getResponseStatus(res));\r\n    }\r\n}\r\n\r\nconst auth = new Auth('https://auth.nomoreparties.co');\r\n\r\nexport default auth;","export default __webpack_public_path__ + \"static/media/sucess.a9eb6caf.svg\";","export default __webpack_public_path__ + \"static/media/alert.d4ce2a26.svg\";","import React from \"react\";\r\nimport success from \"../images/sucess.svg\";\r\nimport alert from \"../images/alert.svg\";\r\n\r\n\r\nfunction InfoTooltip(props) {\r\n    function handleOnCLose() {\r\n        props.onClose();\r\n    }\r\n\r\n    return (\r\n        <div className={props.isOpen ?\r\n            `popup popup_type_${props.name} popup_display_active` : `popup popup_type_${props.name}`}\r\n        >\r\n            <div className=\"popup__window\">\r\n                <img className=\"popup__info-image\"\r\n                     src={props.isSucceed ? success : alert}\r\n                     alt={props.isSucceed ? 'Успех' : 'Ошибка'} />\r\n                <h2 className=\"popup__title\">{props.isSucceed ?\r\n                    'Вы успешно зарегистрировались!' : 'Что-то пошло не так! Попробуйте еще раз.'\r\n                }</h2>\r\n                <button className=\"button button__close popup__close\"\r\n                        type=\"button\"\r\n                        onClick={handleOnCLose}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoTooltip;","import {useState, useEffect} from \"react\";\r\nimport Header from \"./Header\";\r\nimport Main from \"./Main\";\r\nimport Footer from \"./Footer\";\r\nimport EditProfilePopup from \"./EditProfilePopup\"\r\nimport ImagePopup from \"./ImagePopup\";\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport api from \"../utils/api\";\r\nimport EditAvatarPopup from \"./EditAvatarPopup\";\r\nimport AddPlacePopup from \"./AddPlacePopup\";\r\nimport { Route, Switch, useHistory } from 'react-router-dom';\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\nimport Login from \"./Login\";\r\nimport Register from \"./Register\";\r\nimport auth from \"../utils/auth\";\r\nimport InfoTooltip from \"./InfoTooltip\";\r\n\r\nfunction App() {\r\n    //Стейт переменная Поп-апа Аватара\r\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\r\n\r\n    //Стейт переменная Поп-апа редактирования Профиля\r\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\r\n\r\n    //Стейт переменная Поп-апа добавления нового места\r\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\r\n\r\n    //Стейт переменная карточки по клику\r\n    const [selectedCard, setSelectedCard] = useState({\r\n        isOpen: false,\r\n        name: '',\r\n        link: '',\r\n    });\r\n\r\n    //Стейт переменная текущего пользователя\r\n    const [currentUser, setCurrentUser ] = useState({\r\n        name: '',\r\n        about: '',\r\n        avatar: '',\r\n    });\r\n\r\n    //Стейт переменная email пользователя\r\n    const [userEmail, setUserEmail] = useState('');\r\n\r\n    //Стейт переменна информирующего поп-апа\r\n    const [infoTooltip, setInfoTooltip] = useState({\r\n        isOpen: false,\r\n        isSucceed: false,\r\n    });\r\n\r\n    //Стейт переменна массива карточек\r\n    const [cards, setCards] = useState([]);\r\n\r\n    //Стейт переменная статуса авторизации пользователя\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n    //Переменная с логами истории\r\n    let history = useHistory(true);\r\n\r\n    //Получение данных о пользователе с сервера\r\n    useEffect(() => {\r\n        api.getUserInformation()\r\n            .then((data) => {\r\n                setCurrentUser(data);\r\n            })\r\n            .catch(console.error)\r\n    }, [])\r\n\r\n    //Получение массива карточек с сервера\r\n    useEffect(() => {\r\n        api.getInitialCards()\r\n            .then((cards) => setCards(cards))\r\n            .catch(console.error)\r\n    }, []);\r\n\r\n    //Функция проверки токена пользователя\r\n    function checkToken() {\r\n        const jwt = localStorage.getItem(\"jwt\");\r\n        if (jwt) {\r\n            auth.getToken(jwt)\r\n                .then((res) => {\r\n                    setUserEmail(res.data.email);\r\n                    if (res) {\r\n                        setLoggedIn(true);\r\n                    }\r\n                })\r\n                .catch(console.error);\r\n        }\r\n    }\r\n\r\n    //Вызов проверки токена пользователя\r\n    useEffect(() => {\r\n            checkToken();\r\n            if (loggedIn) {\r\n                history.push('/')\r\n            }\r\n    }, [history, loggedIn]);\r\n\r\n    //Функция \"разлогинивания\" текущего пользователя при выходе из системы\r\n    function handleLogOut() {\r\n        localStorage.removeItem(\"jwt\");\r\n        setUserEmail('');\r\n        setLoggedIn(false)\r\n    }\r\n\r\n    //Функция авторизации пользователя\r\n    function handleSignIn(email, password) {\r\n        auth.signIn(email, password)\r\n            .then((res) => {\r\n\r\n                setUserEmail(email);\r\n                localStorage.setItem(\"jwt\", res.token);\r\n                setLoggedIn(true);\r\n\r\n                history.push('/');\r\n            })\r\n            .catch(() => {\r\n                setInfoTooltip({\r\n                    isOpen: true,\r\n                    isSucceed: false,\r\n                })\r\n            })\r\n    }\r\n\r\n    //Функция регистрации нового пользователя\r\n    function handleSignUp(email, password) {\r\n        auth.signUp(email, password)\r\n            .then(() => {\r\n                history.push('/sign-in');\r\n                setInfoTooltip({\r\n                    isOpen: true,\r\n                    isSucceed: true,\r\n                });\r\n            })\r\n            .catch(() => {\r\n                setInfoTooltip({\r\n                    isOpen: true,\r\n                    isSucceed: false,\r\n                })\r\n            })\r\n    }\r\n\r\n    //Функция обработки Лайка карточки\r\n    function handleCardLike(card) {\r\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n\r\n        api.changeLikeCardStatus(card._id, !isLiked)\r\n            .then((newCard) => {\r\n                setCards((state) => state.map((c) => c._id === card._id ? newCard : c))\r\n            })\r\n            .catch(console.error)\r\n    }\r\n\r\n    //Функция обработки удаления карточки\r\n    function handleDeleteCard(card) {\r\n        api.deleteCard(card._id)\r\n            .then(() => {\r\n                setCards((state) => state.filter((res) => res !== card))\r\n            })\r\n            .catch(console.error)\r\n    }\r\n\r\n\r\n    //Функция обработчика клика по кнопке редактирования аватара\r\n    function handleEditAvatarClick() {\r\n        setIsEditAvatarPopupOpen(true);\r\n    }\r\n\r\n    //Функция обработчика клика по кнопке редактирования профиля\r\n    function handleEditProfileClick() {\r\n        setIsEditProfilePopupOpen(true);\r\n    }\r\n\r\n    //Функция обработчика клика по кнопке добавления нового места\r\n    function handleAddPlaceClick() {\r\n        setIsAddPlacePopupOpen(true);\r\n    }\r\n\r\n    //Функция обработчика клика по изображению в карточке\r\n    function handleCardClick(props) {\r\n        setSelectedCard({\r\n            isOpen: true,\r\n            link: props.link,\r\n            name: props.name,\r\n        });\r\n    }\r\n\r\n    //Функция обработчика клика по кнопке закрытия поп-апа\r\n    function closeAllPopups() {\r\n\r\n        setIsEditAvatarPopupOpen(false);\r\n        setIsEditProfilePopupOpen(false);\r\n        setIsAddPlacePopupOpen(false);\r\n        setSelectedCard({isOpen: false});\r\n        setInfoTooltip({isOpen: false});\r\n    }\r\n\r\n    //Функция обновления данных пользователя\r\n    function handleUpdateUser(data) {\r\n        api.saveUserInformation({name: data.name, about: data.about})\r\n            .then((res) => setCurrentUser(res))\r\n            .catch(console.error)\r\n            .finally(() => closeAllPopups());\r\n    }\r\n\r\n    //Функция обновления аватара пользователя\r\n    function handleUpdateAvatar(data) {\r\n        api.changeUserAvatar(data.avatar)\r\n            .then((res) => setCurrentUser(res))\r\n            .catch(console.error)\r\n            .finally(() => closeAllPopups())\r\n    }\r\n\r\n    //Функция добавления новой карточки\r\n    function handleAddPlaceSubmit(data) {\r\n        api.addNewCard({name: data.name, link: data.link})\r\n            .then((newCard) => setCards([newCard, ...cards]))\r\n            .catch(console.error)\r\n            .finally(()=>closeAllPopups())\r\n    }\r\n\r\n    return (\r\n\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className=\"page\">\r\n        <Header email={userEmail} loggedIn={loggedIn} handleLogOut={handleLogOut} />\r\n          <Switch>\r\n              <ProtectedRoute exact path='/'\r\n                              component={Main}\r\n                              loggedIn={loggedIn}\r\n                              onEditProfile={handleEditProfileClick}\r\n                              onAddPlace={handleAddPlaceClick}\r\n                              onEditAvatar={handleEditAvatarClick}\r\n                              onCardClick={handleCardClick}\r\n                              cards={cards}\r\n                              onCardLike={handleCardLike}\r\n                              onCardDelete={handleDeleteCard}\r\n              />\r\n              <Route path='/sign-up'>\r\n                  <Register handleSignUp={handleSignUp}/>\r\n              </Route>\r\n\r\n              <Route path='/sign-in'>\r\n                  <Login handleSignIn={handleSignIn}/>\r\n              </Route>\r\n\r\n          </Switch>\r\n\r\n        <Footer />\r\n\r\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen}\r\n                         onClose={closeAllPopups}\r\n                         onUpdateAvatar={handleUpdateAvatar}\r\n        />\r\n\r\n        <EditProfilePopup isOpen={isEditProfilePopupOpen}\r\n                          onClose={closeAllPopups}\r\n                          onUpdateUser={handleUpdateUser}\r\n        />\r\n\r\n        <AddPlacePopup isOpen={isAddPlacePopupOpen}\r\n                       onClose={closeAllPopups}\r\n                       onAddPlace={handleAddPlaceSubmit}\r\n        />\r\n\r\n        <ImagePopup isOpen={selectedCard.isOpen}\r\n                    name={selectedCard.name}\r\n                    link={selectedCard.link}\r\n                    onClose={closeAllPopups}\r\n        />\r\n        </div>\r\n\r\n        <InfoTooltip isOpen={infoTooltip.isOpen}\r\n                     onClose={closeAllPopups}\r\n                     isSucceed={infoTooltip.isSucceed}\r\n        />\r\n    </CurrentUserContext.Provider>\r\n  );\r\n\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}